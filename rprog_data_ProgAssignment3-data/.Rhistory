source('~/Desktop/Coursera R Course/Week 2/ProgrammingAssignment2/cachematrix.R')
?solve
source('~/Desktop/Coursera R Course/Week 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(sp_vector)
sp_vector <- makeCacheMatrix(matrix)
cacheSolve(sp_vector)
cacheSolve(sp_vector)
source('~/Desktop/Coursera R Course/Week 2/ProgrammingAssignment2/cachematrix.R')
source('~/Desktop/Coursera R Course/Week 2/ProgrammingAssignment2/cachematrix.R')
source('~/Desktop/Coursera R Course/Week 2/ProgrammingAssignment2/cachematrix.R')
source('~/Desktop/Coursera R Course/Week 2/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5,2)
rbinom(10, 10, 0.5)
rbinom
?rbinbom
?rbinom
rbinom(10, 5, 0.5)
rbinom(5, 10, 0.5)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
getwd()
setwd('Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/')
outcome <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
head(outcome)
class(outcome)
ncol(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[, 11])
hist(outcome[,11])
outcome["heart attack"]
names(outcome)
split(outcome, f = 7)
split(outcome, outcome[7])
outcome[,7]
nobs(outcome)
str(outcome)
split(outcome, outcome$State)
by_states <- split(outcome, outcome$State)
names(by_states)
class(by_states["AK"])
by_states["AK"]
as.data.frame(by_states["AK"])
class(as.data.frame(by_states["AK"]))
by_states["AK"][23]
length(by_states["AK"])
by_states["AK"]
by_states["AK"][1]
by_states["AK"][1]
by_states["AK"][,1]
by_states["AK"][[1]]
by_states["AK"]["Provider Name"
]
ak <- by_states["AK"]
names(ak)
class(ak)
ak <- as.data.frame(by_states["AK"])
class(ak)
ak
ak[1]
?stop
outcome = "hello"
outcome == c("yo", "hello", "no")
any(outcome == c("yo", "hello", "no"))
by_states["AK"]
length(by_states["AK"])
length(by_states[["AK"]])
class(by_states[["AK"]])
by_states[["SAAS"]]
ak <- by_states[["AK"]]
ak
class(ak)
ak[11]
class(ak[11])
min(ak[11])
?min
min(ak[11], na.rm = T)
nrow(min(ak[11], na.rm = T))
row(min(ak[11], na.rm = T))
row.names(ak)
?row
row(ak)
min(ak[11], na.rm = T)
?apply
apply(ak[11], 1, function(x) { if(x == 13.4) {return T}})
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMinimum)
apply(ak[11], 1, findRowOfMin)
apply(ak[11], 1, findRowOfMin)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMin)
apply(ak[11], 1, findRowOfMin, min = 13.4)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMin, min = 13.4)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMin, min = 13.4)
?next
apply(ak[11], 1, findRowOfMin, min = 13.4)
debug(findRowOfMin)
apply(ak[11], 1, findRowOfMin, min = 13.4)
outcome_row
outcome_row
outcome_row
exit
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMin, min = 13.4)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMin, min = 13.4)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
apply(ak[11], 1, findRowOfMin, min = 13.4)
l <- apply(ak[11], 1, findRowOfMin, min = 13.4)
class(l)
which(l)
names(which(l))
names(which(l))[1]
class(names(which(l)))
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
ak[names(which(l)), "Hospital Name"]
ak[names(which(l)), 2]
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
?sort
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
best("TX", "heart attack")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
best("TX", "heart attack")
clear()
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
outcomes <-     outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
by_state <- split(outcomes, outcomes$State)
state_info <- by_state[[state]]
state <- "TX"
state_info <- by_state[[state]]
is.null(state_info)
outcome = "heart attack"
valid_outcome <- any(outcome == c("heart attack", "heart failure", "pneumonia"))
valid_outcome
outcome_data <- if(outcome == "heart attack") {
state_info[[11]]
} else if(outcome == "heart failure") {
state_info[[17]]
} else {
state_info[[23]]
}
outcome_data
outcome_data <- if(outcome == "heart attack") {
as.numeric(state_info[[11]])
} else if(outcome == "heart failure") {
as.numeric(state_info[[17]])
} else {
as.numeric(state_info[[23]])
}
outcome_data
state_min <- min(outcome_data)
state_min
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
state_min <- min(outcome_data, na.rm = TRUE)
logical_rows <- apply(outcome_data, 1, findRowOfMin, min = state_min)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
outcome_data <- if(outcome == "heart attack") {
as.numeric(state_info[11])
} else if(outcome == "heart failure") {
as.numeric(state_info[17])
} else {
as.numeric(state_info[23])
}
state_info[11]
state_info[[11]]
summar(state_info)
summary(state_info)
state_info[1]
summary(state_info)
str(state_summar)
str(state_info)
state_info$Phone.Number
state_info[11]
outcome_data <- if(outcome == "heart attack") {
as.numeric(state_info[11])
} else if(outcome == "heart failure") {
as.numeric(state_info[17])
} else {
as.numeric(state_info[23])
}
state_info[11]
class(state_info[11])
class(state_info[11][1])
class(state_info[11][[1])
class(state_info[11][[1]])
outcome_data <- if(outcome == "heart attack") {
state_info[11]
} else if(outcome == "heart failure") {
state_info[17]
} else {
state_info[23]
}
state_min <- min(outcome_data, na.rm = TRUE)
outcome_data[1] <- as.numeric(outcome_data[1])
class(outcome_data)
class(outcome_data[1])
class(outcome_data[[1]])
outcome_data[[1]] <- as.numeric(outcome_data[[1]])
class(outcome_data[[1]])
outcome_data <- as.data.frame(lapply(outcome_data, as.numeric))
class(outcome_data[[1]])
state_min <- min(outcome_data, na.rm = TRUE)
state_min
logical_rows <- apply(outcome_data, 1, findRowOfMin, min = state_min)
logical_rows
min_rows <- which(minimum_rows)
min_rows <- which(logical_rows)
min_rows
hospital_names <- state_info[names(min_rows),2]
hospital_names
state_info[names(min_rows),2]
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
names(min_rows)
logical_rows
which(logical_rows)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
hospital_names <- state_info[min_rows, 2]
hospital_names
best("TX", "heart attack")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
best("TX", "heart attack")
?lapply
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
best("TX", "heart attack")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
best("TX", "heart attack")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
best("TX", "heart attack")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
2
submit()
submit()
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/best.R')
sort
?sort
dd <- data.frame(b = factor(c("Hi", "Med", "Hi", "Low"),
levels = c("Low", "Med", "Hi"), ordered = TRUE),
x = c("A", "D", "A", "C"), y = c(8, 3, 9, 9),
z = c(1, 1, 1, 2))
dd
?order
order(dd[y])
dd[y]
dd$y
order(dd$y)
dd[,dd$y]
dd[dd$y,]
dd[order(dd$y)]
dd[order(dd$y),]
dd[order(dd$y, dd$x),]
dd[order(dd$y, dd$x),]
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
state <- "AK"
by_state <- readOutcomeDataByState()
state_info
state_info
head(state_info)
summary(state_info)
str(state_info)
outcome <- "heart failure"
checkOutcomeValid(outcome)
class(state_info)
state_info[order(state_info),]
state_info[order(state_info[[17]]),]
test <- state_info[order(state_info[[17]]),]
class(test)
head(test)
order(state_info[[17]])
order(state_info[17])
order(state_info[1])
order(state_info[11])
state_info[order(state_info[11]), ]
test <-state_info[order(state_info[11]), ]
hed(test)
head(test)
state_info[11] <- as.numeric(state_info[11])
state_info[[11]] <- as.numeric(state_info[[11])
state_info[[11]] <- as.numeric(state_info[[11]])
test <-state_info[order(state_info[11], na.last = NA), ]
head[test]
head(test)
test[11]
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
state_info
class(state_info)
state_info[[11]] <- as.numeric(state_info[[11]])
ordered_outcome <- order(state_info[[11]], state_info[[2]], na.last = NA)
class(ordered_outcome)
ordered_outcome
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
sorted_data <- state_info[ordered_outcome, ]
sorted_data
sorted_data[11]
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
?if
end
?if else
length(sorted_data)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
sorted_data[1,2]
sorted_data[2,2]
sorted_data[50,2]
length(sorted_data[[2]])
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
sorted_data[200,2]
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
class(outcomes[2])
class(outcomes[[2]])
class(outcomes[[3]])
class(outcomes[[4]])
outcomes <- read.csv('outcome-of-care-measures.csv')
class(outcomes[[4]])
class(outcomes[[11]])
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
state_info
library(plyr)
arrange(state_info,state_info[[11]],state_info[[2]])
arrange(state_info,state_info[[11]],state_info[[2]], na.rm = T)
?arrange
arrange(state_info,state_info[[11]],state_info[[2]], na.last = NA)
arrange
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankhospital.R')
class(outcomes)
?tapply
split_data <- split(outcomes, outcomes$state)
outcomes$state
outcomes$State
split_data <- split(outcomes, outcomes$State)
head(split_data)
class(split_data)
split_data[1]
class(split_data[1])
names(split_data[1])
split_data[[1]]
class(split_data[[1]])
outcomes[, c(2, 7)]
?split
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
?cbind
?mapply
outcome = "heart failure"
data <- readOutcomeData()
outcome <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
simplified_data <- data[, c(2, 7, outcome)]
length(simplified_data)
split_data <- split(simplified_data, simplified_data[[7]])
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
split_data <- split(simplified_data, simplified_data[[2]])
length(split_data)
length(split_data[[1]])
names(split_data[[1]])
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
best_hospitals <- lapply(split_data, getBestHospital)
split_data[1]
class(split_data[1])
class(split_data[1][[1]])
class(split_data[1][1])
debug(getBestHospital)
best_hospitals <- lapply(split_data, getBestHospital)
df
q
q
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
best_hospitals <- lapply(split_data, getBestHospital)
best_hospitals <- lapply(split_data, getBestHospital)
data
class(data)
c
c
q
c
q
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
best_hospitals <- lapply(split_data, getBestHospital)
debug(getBestHospital)
best_hospitals <- lapply(split_data, getBestHospital)
data
ordered_vector
ordered_vector
!
first <- split_data[1]
first
class(first)
data <- first[[1]]
class(data)
order(data[[3]], data[[1]], na.last = NA)
order(data[3], data[1], na.last = NA)
ordered_vector <- order(data[[3]], data[[1]], na.last = NA)
data <- data[ordered_vector, ]
data[1, 1]
debug(getBestHospital)
best_hospitals <- lapply(split_data, getBestHospital)
data
data
class(data)
df_in_list
class(df_in_list)
q
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
best_hospitals <- lapply(split_data, getBestHospital)
class(best_hospitals)
split_data[1]
names(split_data)
mapply(cbind, best_hospitals, names(split_data))
head(best_hospitals)
cbind(best_hospitals, names(best_hospitals))
states <- names(best_hospitals)
cbind(best_hospitals, states)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
t <- cbind(best_hospitals, states)
class(t)
as.data.frame(t)
t <- as.data.frame(t)
class(t)
length(t)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("heart attack", 20), 10)
debug(getHospital)
tail(rankall("heart attack", 20), 10)
df
num
ordered_vector
df
df[[3]]
df[[1]]
order(df[[3]], df[[1]], na.last = NA)
q
q
q
q
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
tail(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
submit()
submit()
submit()
source('~/Desktop/Coursera R Course/rprog_data_ProgAssignment3-data/rankall.R')
